/*
 * dsp.c
 *
 *  Created on: Jul 3, 2021
 *      Author: Chris
 */

#include "dsp.h"


static const float coeff[TAPS+1] = {2.080639e-13,1.397475e-04,1.860172e-04,1.288866e-04,-3.069551e-13,-1.374097e-04,-2.112872e-04,-1.688849e-04,2.456492e-13,2.543752e-04,5.132866e-04,6.849790e-04,7.043246e-04,5.638737e-04,3.242946e-04,9.663891e-05,0.000000e+00,1.095548e-04,4.165823e-04,8.200252e-04,1.157982e-03,1.270813e-03,1.072058e-03,5.964139e-04,-5.323158e-13,-4.937330e-04,-6.854079e-04,-4.922213e-04,9.058271e-13,5.538763e-04,8.678435e-04,7.033932e-04,-7.633804e-13,-1.075322e-03,-2.173899e-03,-2.897501e-03,-2.967714e-03,-2.361248e-03,-1.347027e-03,-3.975353e-04,0.000000e+00,-4.404140e-04,-1.653353e-03,-3.211226e-03,-4.472453e-03,-4.839648e-03,-4.025176e-03,-2.207725e-03,1.329300e-12,1.777066e-03,2.433397e-03,1.724294e-03,-2.088096e-12,-1.891178e-03,-2.927391e-03,-2.345143e-03,1.628595e-12,3.508035e-03,7.021203e-03,9.270525e-03,9.412033e-03,7.427909e-03,4.205896e-03,1.232876e-03,0.000000e+00,1.350481e-03,5.047091e-03,9.766768e-03,1.356447e-02,1.465002e-02,1.217271e-02,6.676646e-03,-2.167002e-12,-5.391906e-03,-7.408444e-03,-5.274205e-03,3.212896e-12,5.863897e-03,9.160431e-03,7.419148e-03,-2.372298e-12,-1.141215e-02,-2.324222e-02,-3.131072e-02,-3.253143e-02,-2.636358e-02,-1.538931e-02,-4.671725e-03,-3.360887e-18,-5.582173e-03,-2.202418e-02,-4.541365e-02,-6.799121e-02,-8.034471e-02,-7.449291e-02,-4.684693e-02,2.591345e-12,5.736542e-02,1.125550e-01,1.523517e-01,1.668410e-01,1.523517e-01,1.125550e-01,5.736542e-02,2.591345e-12,-4.684693e-02,-7.449291e-02,-8.034471e-02,-6.799121e-02,-4.541365e-02,-2.202418e-02,-5.582173e-03,-3.360887e-18,-4.671725e-03,-1.538931e-02,-2.636358e-02,-3.253143e-02,-3.131072e-02,-2.324222e-02,-1.141215e-02,-2.372298e-12,7.419148e-03,9.160431e-03,5.863897e-03,3.212896e-12,-5.274205e-03,-7.408444e-03,-5.391906e-03,-2.167002e-12,6.676646e-03,1.217271e-02,1.465002e-02,1.356447e-02,9.766768e-03,5.047091e-03,1.350481e-03,0.000000e+00,1.232876e-03,4.205896e-03,7.427909e-03,9.412033e-03,9.270525e-03,7.021203e-03,3.508035e-03,1.628595e-12,-2.345143e-03,-2.927391e-03,-1.891178e-03,-2.088096e-12,1.724294e-03,2.433397e-03,1.777066e-03,1.329300e-12,-2.207725e-03,-4.025176e-03,-4.839648e-03,-4.472453e-03,-3.211226e-03,-1.653353e-03,-4.404140e-04,0.000000e+00,-3.975353e-04,-1.347027e-03,-2.361248e-03,-2.967714e-03,-2.897501e-03,-2.173899e-03,-1.075322e-03,-7.633804e-13,7.033932e-04,8.678435e-04,5.538763e-04,9.058271e-13,-4.922213e-04,-6.854079e-04,-4.937330e-04,-5.323158e-13,5.964139e-04,1.072058e-03,1.270813e-03,1.157982e-03,8.200252e-04,4.165823e-04,1.095548e-04,0.000000e+00,9.663891e-05,3.242946e-04,5.638737e-04,7.043246e-04,6.849790e-04,5.132866e-04,2.543752e-04,2.456492e-13,-1.688849e-04,-2.112872e-04,-1.374097e-04,-3.069551e-13,1.288866e-04,1.860172e-04,1.397475e-04,2.080639e-13};


void matrix_init(uint32_t numRow, uint32_t numCol, uint16_t* matrix, arm_matrix_instance_q15* instance, uint32_t offset){

	for(uint32_t i = 0; i < 2; i++){
		arm_mat_init_q15(&instance[i], numRow, numCol, (q15_t*)&matrix[offset*i]);
	}
}

void FIR_Filter_Init(dsp_buffer_t* buff, uint32_t channelNumber){
	for(uint32_t i = 0; i < channelNumber; i++){
		arm_fir_init_f32(buff[i].lpFilter_inst, TAPS, &coeff[0], buff[i].state, BLOCK_SIZE);
	}
}

void FIR_Filter(dsp_buffer_t* dsp, uint16_t (*input)[BLOCK_SIZE], uint16_t (*output)[BLOCK_SIZE] , uint32_t channelNumber){

	float32_t floatFilter_input[4][16];
	float32_t floatFilter_output[4][16];

	arm_q15_to_float((const q15_t*)&input[0][0], (float32_t*)&floatFilter_input[0][0], channelNumber*16);

	for(uint32_t i = 0; i < channelNumber; i++){
		arm_fir_f32(dsp[i].lpFilter_inst, &floatFilter_input[i][0], &floatFilter_output[i][0], BLOCK_SIZE);
	}

	arm_float_to_q15(&floatFilter_output[0][0], (q15_t*)&output[0][0], channelNumber*16);

}
