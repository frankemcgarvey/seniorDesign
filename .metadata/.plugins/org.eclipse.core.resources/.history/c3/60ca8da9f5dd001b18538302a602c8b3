/*
 * dsp.c
 *
 *  Created on: Jul 3, 2021
 *      Author: Chris
 */

#include "dsp.h"


static const float coeff[TAPS+1] = {-1.839772e-04,-2.448550e-04,-1.703963e-04,3.070088e-13,1.855615e-04,2.899089e-04,2.361001e-04,-2.591693e-13,-3.713037e-04,-7.669065e-04,-1.048096e-03,-1.103769e-03,-9.048374e-04,-5.326081e-04,-1.623374e-04,0.000000e+00,-1.920709e-04,-7.451542e-04,-1.495202e-03,-2.150395e-03,-2.401426e-03,-2.059779e-03,-1.164201e-03,7.217691e-13,9.926643e-04,1.397196e-03,1.016763e-03,-1.263399e-12,-1.173071e-03,-1.859941e-03,-1.524911e-03,1.082886e-12,2.383272e-03,4.869847e-03,6.559415e-03,6.788488e-03,5.457154e-03,3.145272e-03,9.378169e-04,0.000000e+00,1.060760e-03,4.024549e-03,7.901453e-03,1.112702e-02,1.217817e-02,1.024833e-02,5.689931e-03,-1.868352e-12,-4.700736e-03,-6.527612e-03,-4.694323e-03,2.887297e-12,5.318079e-03,8.380264e-03,6.843419e-03,-2.205332e-12,-1.068734e-02,-2.191759e-02,-2.971942e-02,-3.106738e-02,-2.532124e-02,-1.485960e-02,-4.533175e-03,-3.276039e-18,-5.463907e-03,-2.163921e-02,-4.477216e-02,-6.723485e-02,-7.966369e-02,-7.403249e-02,-4.664837e-02,2.584480e-12,5.728434e-02,1.124953e-01,1.523516e-01,1.668704e-01,1.523516e-01,1.124953e-01,5.728434e-02,2.584480e-12,-4.664837e-02,-7.403249e-02,-7.966369e-02,-6.723485e-02,-4.477216e-02,-2.163921e-02,-5.463907e-03,-3.276039e-18,-4.533175e-03,-1.485960e-02,-2.532124e-02,-3.106738e-02,-2.971942e-02,-2.191759e-02,-1.068734e-02,-2.205332e-12,6.843419e-03,8.380264e-03,5.318079e-03,2.887297e-12,-4.694323e-03,-6.527612e-03,-4.700736e-03,-1.868352e-12,5.689931e-03,1.024833e-02,1.217817e-02,1.112702e-02,7.901453e-03,4.024549e-03,1.060760e-03,0.000000e+00,9.378169e-04,3.145272e-03,5.457154e-03,6.788488e-03,6.559415e-03,4.869847e-03,2.383272e-03,1.082886e-12,-1.524911e-03,-1.859941e-03,-1.173071e-03,-1.263399e-12,1.016763e-03,1.397196e-03,9.926643e-04,7.217691e-13,-1.164201e-03,-2.059779e-03,-2.401426e-03,-2.150395e-03,-1.495202e-03,-7.451542e-04,-1.920709e-04,0.000000e+00,-1.623374e-04,-5.326081e-04,-9.048374e-04,-1.103769e-03,-1.048096e-03,-7.669065e-04,-3.713037e-04,-2.591693e-13,2.361001e-04,2.899089e-04,1.855615e-04,3.070088e-13,-1.703963e-04,-2.448550e-04,-1.839772e-04};


void matrix_init(uint32_t numRow, uint32_t numCol, uint16_t* matrix, arm_matrix_instance_q15* instance, uint32_t offset){

	for(uint32_t i = 0; i < 2; i++){
		arm_mat_init_q15(&instance[i], numRow, numCol, (q15_t*)&matrix[offset*i]);
	}
}

void FIR_Filter_Init(dsp_buffer_t* buff, uint32_t channelNumber){
	for(uint32_t i = 0; i < channelNumber; i++){
		arm_fir_init_f32(buff[i].lpFilter_inst, TAPS, &coeff[0], buff[i].state, BLOCK_SIZE);
	}
}

void FIR_Filter(dsp_buffer_t* dsp, uint16_t (*input)[BLOCK_SIZE], uint16_t (*output)[BLOCK_SIZE] , uint32_t channelNumber){

	float32_t floatFilter_input[4][16];
	float32_t floatFilter_output[4][16];

	arm_q15_to_float((const q15_t*)&input[0][0], (float32_t*)&floatFilter_input[0][0], channelNumber*16);

	for(uint32_t i = 0; i < channelNumber; i++){
		arm_fir_f32(dsp[i].lpFilter_inst, &floatFilter_input[i][0], &floatFilter_output[i][0], BLOCK_SIZE);
	}

	arm_float_to_q15(&floatFilter_output[0][0], (q15_t*)&output[0][0], channelNumber*16);

}
